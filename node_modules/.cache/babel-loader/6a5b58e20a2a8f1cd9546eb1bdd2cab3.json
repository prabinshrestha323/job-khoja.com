{"ast":null,"code":"var _jsxFileName = \"E:\\\\job-listing-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header/\";\nimport SearchBar from \"./components/SearchBar\";\nimport Job from \"./components/Job/JobCard\";\nimport NewJobModel from \"./components/Job/NewJobModal\";\nimport jobData from \"./dummyData\";\nimport JobCard from \"./components/Job/JobCard\";\nimport { firestore } from \"./components/firebase/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchJobs = async () => {\n    const req = await firestore.collection(\"jobs\").orderBy(\"postedOn\", \"desc\").get();\n    const tempJobs = req.docs.map(job => ({ ...job.data(),\n      id: job.id,\n      postedOn: job.data().postedOn.toDate()\n    }));\n    setJobs(tempJobs);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 1\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 47\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 1\n        }, this) : jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, { ...job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n}, \"xAXs/kqjedBdxYZ+TLlF70OyTQI=\");","map":{"version":3,"sources":["E:/job-listing-react/src/App.js"],"names":["React","useState","useEffect","Box","CircularProgress","Grid","ThemeProvider","theme","Header","SearchBar","Job","NewJobModel","jobData","JobCard","firestore","jobs","setJobs","loading","setLoading","fetchJobs","req","collection","orderBy","get","tempJobs","docs","map","job","data","id","postedOn","toDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,IAAhC,EAAsCC,aAAtC,QAA2D,mBAA3D;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAGA,kBAAe,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBf,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;;AAGA,QAAMkB,SAAS,GAAG,YAAW;AAC3B,UAAMC,GAAG,GAAG,MAAMN,SAAS,CAACO,UAAV,CAAqB,MAArB,EAA6BC,OAA7B,CAAqC,UAArC,EAAgD,MAAhD,EAAwDC,GAAxD,EAAlB;AACD,UAAMC,QAAQ,GAAGJ,GAAG,CAACK,IAAJ,CAASC,GAAT,CAAaC,GAAG,KAAK,EAAC,GAAGA,GAAG,CAACC,IAAJ,EAAJ;AAAgBC,MAAAA,EAAE,EAAEF,GAAG,CAACE,EAAxB;AAA6BC,MAAAA,QAAQ,EAACH,GAAG,CAACC,IAAJ,GAAWE,QAAX,CAAoBC,MAApB;AAAtC,KAAL,CAAhB,CAAjB;AACDf,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACC,GALD;;AAOAhB,EAAAA,SAAS,CAAE,MAAI;AACbiB,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAGE,sBAAO,QAAC,aAAD;AAAgB,IAAA,KAAK,EAAGZ,KAAxB;AAAA,4BACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,eAGN,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,QAAxB;AAAA,6BACD,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,gCACF,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADE,EAIAU,OAAO,gBACT,QAAC,GAAD;AAAK,UAAA,OAAO,EAAE,MAAd;AAAqB,UAAA,cAAc,EAAC,QAApC;AAAA,uCAA8C,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADS,GAGTF,IAAI,CAACW,GAAL,CAASC,GAAG,iBAAI,QAAC,OAAD,OAA2BA;AAA3B,WAAeA,GAAG,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA,gBAAhB,CAPE;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YAHM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAmBD,CAlCD","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Box, CircularProgress, Grid, ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header/\";\nimport SearchBar from \"./components/SearchBar\";\nimport Job from \"./components/Job/JobCard\";\nimport NewJobModel from \"./components/Job/NewJobModal\";\nimport jobData from \"./dummyData\";\nimport JobCard from \"./components/Job/JobCard\";\nimport { firestore } from \"./components/firebase/config\";\n\n\nexport default () => {\nconst [jobs, setJobs]= useState([]);\nconst [loading, setLoading] = useState(true)\n\n\nconst fetchJobs = async () =>{\n  const req = await firestore.collection(\"jobs\").orderBy(\"postedOn\",\"desc\").get();\n const tempJobs = req.docs.map(job => ({...job.data(), id: job.id,  postedOn:job.data().postedOn.toDate() }));\nsetJobs(tempJobs);\nsetLoading(false);\n}\n\nuseEffect (()=>{\n  fetchJobs();\n}, [])\n  return <ThemeProvider  theme ={theme}>\n     <Header/>\n   \n   <Grid container justify=\"center\" >\n  <Grid item xs={10}>\n<SearchBar/>\n\n\n{ loading ? (\n<Box display= \"flex\" justifyContent=\"center\"> <CircularProgress/> </Box>\n):(\njobs.map(job => <JobCard key ={job.id} {...job}/>)\n)}\n\n  </Grid>\n  </Grid>\n   \n   \n  </ThemeProvider>\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var getItemCyclic = function getItemCyclic(index, array) {\n  var id = index % array.length;\n  return array[id];\n};\n\nvar offset = function offset(list, amount) {\n  return [].concat(list.slice(amount), list.slice(0, amount));\n};\n\nvar patternChunks = function patternChunks(array, pattern) {\n  var result = [];\n\n  var _array = [].concat(array);\n\n  var i = 0;\n\n  while (_array.length > 0) {\n    result.push(_array.splice(0, getItemCyclic(i, pattern)));\n    i++;\n  }\n\n  return result;\n};\n\nvar replaceAt = function replaceAt(array, index, replacementFn) {\n  var item = array[index];\n  return array.slice(0, index).concat([replacementFn(item)]).concat(array.slice(index + 1));\n};\n\nvar times = function times(iterations, callback) {\n  var result = [];\n\n  for (var i = 0; i < iterations; i++) {\n    result.push(callback(i));\n  }\n\n  return result;\n};\n\nexport { getItemCyclic, offset, patternChunks, replaceAt, times };","map":{"version":3,"sources":["E:\\job-listing-react\\node_modules\\data-fns\\src\\lib\\getItemCyclic.ts","E:\\job-listing-react\\node_modules\\data-fns\\src\\lib\\offset.ts","E:\\job-listing-react\\node_modules\\data-fns\\src\\lib\\patternChunks.ts","E:\\job-listing-react\\node_modules\\data-fns\\src\\lib\\replaceAt.ts","E:\\job-listing-react\\node_modules\\data-fns\\src\\lib\\times.ts"],"names":["getItemCyclic","id","index","array","offset","list","patternChunks","result","_array","i","replaceAt","item","replacementFn","times","callback"],"mappings":"IAAaA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,KAAA,EAAA,KAAA,EAAA;AAC3B,MAAMC,EAAE,GAAGC,KAAK,GAAGC,KAAK,CAAxB,MAAA;AACA,SAAOA,KAAK,CAAZ,EAAY,CAAZ;AACD,C;;ICHYC,MAAM,GAAG,SAATA,MAAS,CAAA,IAAA,EAAA,MAAA,EAAA;AACpB,SAAA,GAAA,MAAA,CAAWC,IAAI,CAAJA,KAAAA,CAAX,MAAWA,CAAX,EAAkCA,IAAI,CAAJA,KAAAA,CAAAA,CAAAA,EAAlC,MAAkCA,CAAlC,CAAA;AADK,C;;ICEMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,KAAA,EAAA,OAAA,EAAA;AAC3B,MAAMC,MAAM,GAAZ,EAAA;;AACA,MAAMC,MAAM,GAAA,GAAA,MAAA,CAAZ,KAAY,CAAZ;;AACA,MAAIC,CAAC,GAAL,CAAA;;AAEA,SAAOD,MAAM,CAANA,MAAAA,GAAP,CAAA,EAA0B;AACxBD,IAAAA,MAAM,CAANA,IAAAA,CAAYC,MAAM,CAANA,MAAAA,CAAAA,CAAAA,EAAiBR,aAAa,CAAA,CAAA,EAA1CO,OAA0C,CAA9BC,CAAZD;AACAE,IAAAA,CAAC;AACF;;AAED,SAAA,MAAA;AAVK,C;;ICFMC,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAA,KAAA,EAAA,aAAA,EAAA;AAKvB,MAAMC,IAAI,GAAGR,KAAK,CAAlB,KAAkB,CAAlB;AAEA,SAAOA,KAAK,CAALA,KAAAA,CAAAA,CAAAA,EAAAA,KAAAA,EAAAA,MAAAA,CAEG,CAACS,aAAa,CAFjBT,IAEiB,CAAd,CAFHA,EAAAA,MAAAA,CAGGA,KAAK,CAALA,KAAAA,CAAYD,KAAK,GAH3B,CAGUC,CAHHA,CAAP;AAPK,C;;ICAMU,KAAK,GAAG,SAARA,KAAQ,CAAA,UAAA,EAAA,QAAA,EAAA;AACnB,MAAIN,MAAM,GAAV,EAAA;;AAEA,OAAK,IAAIE,CAAC,GAAV,CAAA,EAAcA,CAAC,GAAf,UAAA,EAA8BA,CAA9B,EAAA,EAAmC;AAC/BF,IAAAA,MAAM,CAANA,IAAAA,CAAYO,QAAQ,CAApBP,CAAoB,CAApBA;AACH;;AAED,SAAA,MAAA;AAPK,C","sourcesContent":["export const getItemCyclic = <T>(index: number, array: Array<T>): T => {\n  const id = index % array.length\n  return array[id]\n}\n","export const offset = <T extends Array<any>>(list: T, amount: number): T => {\n  return [...list.slice(amount), ...list.slice(0, amount)] as T\n}\n","import { getItemCyclic } from './getItemCyclic'\n\nexport const patternChunks = <T>(array: Array<T>, pattern: Array<number>): Array<Array<T>> => {\n  const result: Array<Array<T>> = []\n  const _array = [...array]\n  let i = 0\n\n  while (_array.length > 0) {\n    result.push(_array.splice(0, getItemCyclic(i, pattern)))\n    i++\n  }\n\n  return result\n}\n","export const replaceAt = <A>(\n  array: Array<A>,\n  index: number,\n  replacementFn: (item: A) => A\n): Array<A> => {\n  const item = array[index]\n\n  return array\n    .slice(0, index)\n    .concat([replacementFn(item)])\n    .concat(array.slice(index + 1))\n}\n","export const times = <T>(iterations: number, callback: (index: number) => T): Array<T> => {\n  let result: Array<T> = []\n  \n  for (let i=0; i < iterations; i++) {\n      result.push(callback(i));\n  }\n  \n  return result\n}"]},"metadata":{},"sourceType":"module"}